{"version":3,"sources":["components/Layout.jsx","components/AddTodo.jsx","components/TodoListItem.jsx","components/TodoList.jsx","TodoApp.jsx","custom-hooks.js","index.js"],"names":["Layout","memo","props","Paper","elevation","style","padding","margin","backgroundColor","AppBar","color","position","height","Toolbar","IconButton","edge","aria-label","Typography","children","AddTodo","Grid","container","xs","md","item","paddingRight","TextField","placeholder","value","inputValue","onChange","onInputChange","onKeyPress","onInputKeyPress","fullWidth","Button","variant","onClick","onButtonClick","TodoListItem","ListItem","divider","Checkbox","onCheckBoxToggle","checked","disableRipple","ListItemText","primary","text","ListItemSecondaryAction","TodoList","items","length","List","overflow","map","todo","idx","key","onItemRemove","onItemCheck","TodoApp","initialValue","useState","setInputValue","changeInput","event","target","clearInput","keyInput","callback","which","keyCOde","useInputValue","todos","setTodos","addTodo","concat","checkTodo","index","removeTodo","filter","useTodos","clearInputAndAddTodo","_","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2376105a.chunk.js","sourcesContent":["import React, { memo } from \"react\";\r\nimport {\r\n  AppBar,\r\n  IconButton,\r\n  Toolbar,\r\n  Typography,\r\n  Paper\r\n} from \"@material-ui/core\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst Layout = memo(props => (\r\n  <Paper\r\n    elevation={0}\r\n    style={{ padding: 0, margin: 0, backgroundColor: \"#fafafa\" }}\r\n  >\r\n    <AppBar color=\"primary\" position=\"static\" style={{ height: 64 }}>\r\n      <Toolbar style={{ height: 64 }}>\r\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography color=\"inherit\">TODO APP</Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n    {props.children}\r\n  </Paper>\r\n));\r\n\r\nexport default Layout;\r\n","import React, { memo } from \"react\";\r\n\r\nimport { TextField, Paper, Button, Grid } from \"@material-ui/core\";\r\n\r\nconst AddTodo = memo(props => (\r\n  <Paper style={{ margin: 16, padding: 16 }}>\r\n    <Grid container>\r\n      <Grid xs={10} md={11} item style={{ paddingRight: 16 }}>\r\n        <TextField\r\n          placeholder=\"Todo hier einfügen\"\r\n          value={props.inputValue}\r\n          onChange={props.onInputChange}\r\n          onKeyPress={props.onInputKeyPress}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid xs={2} md={1} item>\r\n        <Button\r\n          fullWidth\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          onClick={props.onButtonClick}\r\n        >\r\n          Add\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  </Paper>\r\n));\r\n\r\nexport default AddTodo;\r\n","import React, { memo } from \"react\";\r\n\r\nimport {\r\n  List,\r\n  ListItem,\r\n  Checkbox,\r\n  IconButton,\r\n  ListItemText,\r\n  ListItemSecondaryAction\r\n} from \"@material-ui/core\";\r\n\r\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\r\n\r\nconst TodoListItem = memo(props => (\r\n  <ListItem divider={props.divider}>\r\n    <Checkbox\r\n      onClick={props.onCheckBoxToggle}\r\n      checked={props.checked}\r\n      disableRipple\r\n    />\r\n    <ListItemText primary={props.text} />\r\n    <ListItemSecondaryAction>\r\n      <IconButton aria-label=\"Todo löschen\" onClick={props.onButtonClick}>\r\n        <DeleteOutlined />\r\n      </IconButton>\r\n    </ListItemSecondaryAction>\r\n  </ListItem>\r\n));\r\n\r\nexport default TodoListItem;\r\n","import React, { memo } from \"react\";\r\n\r\nimport { List, Paper, Grid } from \"@material-ui/core\";\r\nimport TodoListItem from \"./TodoListItem\";\r\n\r\nconst TodoList = memo(props => (\r\n  <>\r\n    {props.items.length > 0 && (\r\n      <Paper style={{ margin: 16 }}>\r\n        <List style={{ overflow: \"scroll\" }}>\r\n          {props.items.map((todo, idx) => (\r\n            <TodoListItem\r\n              {...todo}\r\n              key={`TodoItem.${idx}`}\r\n              divider={idx !== props.items.length - 1}\r\n              onButtonClick={() => props.onItemRemove(idx)}\r\n              onCheckBoxToggle={() => props.onItemCheck(idx)}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n    )}\r\n  </>\r\n));\r\n\r\nexport default TodoList;\r\n","import \"./styles.css\";\r\n\r\nimport React, { memo } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { useInputValue, useTodos } from \"./custom-hooks\";\r\nimport Layout from \"./components/Layout\";\r\nimport AddTodo from \"./components/AddTodo\";\r\nimport TodoList from \"./components/TodoList\";\r\n\r\nconst TodoApp = memo(props => {\r\n  const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\r\n  const { todos, addTodo, checkTodo, removeTodo } = useTodos();\r\n\r\n  const clearInputAndAddTodo = _ => {\r\n    clearInput();\r\n    addTodo(inputValue);\r\n  };\r\n\r\n  return (\r\n    <Layout>\r\n      <AddTodo\r\n        inputValue={inputValue}\r\n        onInputChange={changeInput}\r\n        onButtonClick={clearInputAndAddTodo}\r\n        onInputKeyPress={event => keyInput(event, clearInputAndAddTodo)}\r\n      />\r\n      <TodoList\r\n        items={todos}\r\n        onItemCheck={idx => checkTodo(idx)}\r\n        onItemRemove={idx => removeTodo(idx)}\r\n      />\r\n    </Layout>\r\n  );\r\n});\r\n\r\nexport default TodoApp;\r\n","import { useState } from \"react\";\r\n\r\nexport const useInputValue = (initialValue = \"\") => {\r\n  const [inputValue, setInputValue] = useState(initialValue);\r\n\r\n  return {\r\n    inputValue,\r\n    changeInput: event => setInputValue(event.target.value),\r\n    clearInput: () => setInputValue(\"\"),\r\n    keyInput: (event, callback) => {\r\n      if (event.which === 13 || event.keyCOde === 13) {\r\n        callback(inputValue);\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n  };\r\n};\r\n\r\nexport const useTodos = (initialValue = []) => {\r\n  const [todos, setTodos] = useState(initialValue);\r\n\r\n  return {\r\n    todos,\r\n    addTodo: text => {\r\n      if (text !== \"\") {\r\n        setTodos(\r\n          todos.concat({\r\n            text,\r\n            checked: false\r\n          })\r\n        );\r\n      }\r\n    },\r\n    checkTodo: idx => {\r\n      setTodos(\r\n        todos.map((todo, index) => {\r\n          if (idx === index) {\r\n            todo.checked = !todo.checked;\r\n          }\r\n          return todo;\r\n        })\r\n      );\r\n    },\r\n    removeTodo: idx => {\r\n      setTodos(todos.filter((todo, index) => idx !== index));\r\n    }\r\n  };\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoApp from \"./TodoApp.jsx\";\n\nReactDOM.render(<TodoApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}